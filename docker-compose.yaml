services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    ports:
      - "80:80" # Porta HTTP
      - "443:443" # Porta HTTPS
    command:
      - "--providers.docker=true" # Habilitar Docker como provider
      - "--entrypoints.web.address=:80" # Configuração para entrada HTTP
      - "--entrypoints.websecure.address=:443" # Configuração para entrada HTTPS
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=websecure" # Desafio HTTP para Let's Encrypt
      - "--certificatesresolvers.letsencrypt.acme.email=mateus.caccelli@zencloud.com.br" # Substitua pelo seu email
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json" # Armazenamento de certificados
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Acesso ao Docker socket
      - "./letsencrypt:/letsencrypt" # Volume para armazenar certificados

  open-webui:
    build:
      context: .
      dockerfile: Dockerfile
    # image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    ports:
      - "8080:8080"
    environment:
      - 'WEBUI_SECRET_KEY=zJsRn6zPPAkXpzN0P/bXu0qmWioWLWOzHQGVVL7Dr2U='
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.open-webui.rule=Host(`demo01.harko.ai`)" # Substitua pelo seu domínio real
      - "traefik.http.routers.open-webui.entrypoints=websecure"
      # - "traefik.http.routers.open-webui.tls.certresolver=letsencrypt"
      - "traefik.http.services.open-webui.loadbalancer.server.port=8080"
volumes:
  open-webui: {}
